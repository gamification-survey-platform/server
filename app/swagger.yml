openapi: 3.0.0
info:
  title: GAMIFICATION-PLATFORM API doc
  description: API doc for Gamification-platform
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/
    description: local server
tags:
  - name: User
    description: Operations regarding user
  - name: Survey
    description: Operations regarding Survey
paths:
  "/users":

    get:
      security:
        - bearerAuth: []
      tags:
        - User
      parameters:
        - $ref: "#/components/parameters/criteria"
      description: Get all users
      summary: Get (Search) all users
      responses:
        "200":
          description: Get all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
              example:
                [
                  { "andrewId": "XXX", "online": true },
                  { "andrewId": "XXX", "online": true },
                  { "andrewId": "XXX", "online": false },
                ]
  "/users/{andrewId}":

    get:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Get a part of user
      description: Get a part of user
      parameters:
        - $ref: "#/components/parameters/andrewId"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
              example:
                andrewId: "XXX"
                online: true
        "403":
          description: No access (illegal access to other users' info).

  "/users/login":
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Login
      description: User login
      parameters:
        - in: query
          name: andrew_id
          schema:
            type: string
        - in: query
          name: password
          schema:
            type: string
        
      responses:
        "200":
          description: success
        "404":
          description: User not exist
        "400":
          description: Andrew ID and password do not match

  "/users/register":
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Register
      description: Register new account
      parameters:
        - in: query
          name: andrew_id
          schema:
            type: string
        - in: query
          name: password
          schema:
            type: string
        
      responses:
        "200":
          description: success
        "400":
          description: The user name already existed


                
  "/course/{course_id}/view":
    get:
      security:
        - bearerAuth: []
      tags:
        - Course
      summary: Get a part of course
      description: Get a part of course
      parameters:
        - $ref: "#/components/parameters/course_id"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
              example:
                course_id: "123"

  "/surveys":
    get:
      tags:
        - Survey
      description: Get surveys
      summary: Get the list of all surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SurveyTemplete"
            example:
              name: Survey1
              instructions: Survey for homework1
              is_template: false
              other_info: This survey should be finished before 2/4
      responses:
        "201":
          description: All the surveys
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyTemplete"
              example:
                pk: 1
                name: Survey1
                instructions: Survey for homework1
                other_info: This survey should be finished before 2/4

 
components:
  parameters:
    andrewId:
      name: andrewId
      in: path
      description: AndrewId of the user
      required: true
      schema:
        type: string
    user:
      name: andrewId
      in: query
      description: AndrewId of the user
      required: false
      schema:
        type: string
    criteria:
      in: query
      name: criteria
      description: Search criteria
      required: false
      schema:
        type: string
    course_id:
      in: path
      name: course_id
      description: Id of the course_id
      required: true
      schema:
        type:
          string

  schemas:
    User:
      type: object
      properties:
        andrew_id:
          type: string
        password:
          type: string
          format: password
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        is_staff:
          type: boolean
        is_active:
          type: boolean
        date_joined:
          type: string
          format: date-time
    SurveyTemplete:
      type: object
      properties:
        name:
          type: string
        instructions:
          type: string
        is_template:
          type: boolean
        other_info:
          type: string
    Course:
      type: object
      properties:
        course_id:
          type: string
        name:
          type: string
        syllabus:
          type: string
        semester:
          type: string
        visible:
          type: string
        picture:
          type: object
